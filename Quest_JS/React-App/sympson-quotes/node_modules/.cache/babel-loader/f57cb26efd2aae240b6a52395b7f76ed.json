{"ast":null,"code":"var _jsxFileName = \"/home/rach/Documents/WILD CODE SCHOOL/WCS_quest_2020/Quest_JS/React-App/sympson-quotes/src/components/QuoteForm.js\";\nimport React from 'react';\nimport './QuoteForm.css';\n\nclass QuoteForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      character: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      character: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(`Here come a new character: ${this.state.value}`);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"QuoteForm\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"character\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, \"Character:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"character\",\n      name: \"character\",\n      type: \"text\",\n      value: this.state.character\n      /* onChange={(event) => {\n        const input = event.target;\n        console.log('NAME:', input.name, 'VALUE:', input.value);\n      }} */\n      // onChange={this.handleChange}\n      ,\n      onChange: event => this.setState({\n        character: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default QuoteForm;","map":{"version":3,"sources":["/home/rach/Documents/WILD CODE SCHOOL/WCS_quest_2020/Quest_JS/React-App/sympson-quotes/src/components/QuoteForm.js"],"names":["React","QuoteForm","Component","constructor","props","state","character","handleChange","bind","handleSubmit","event","setState","target","value","console","log","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAO;AACf,SAAKC,QAAL,CAAc;AAACL,MAAAA,SAAS,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAzB,KAAd;AACH;;AAEDJ,EAAAA,YAAY,CAACC,KAAD,EAAO;AACfI,IAAAA,OAAO,CAACC,GAAR,CAAa,8BAA6B,KAAKV,KAAL,CAAWQ,KAAM,EAA3D;AACAH,IAAAA,KAAK,CAACM,cAAN;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAE,KAAKR,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAIE;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,WAA3B;AAAuC,MAAA,IAAI,EAAC,MAA5C;AAAmD,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC;AACnE;;;;AAKA;AANF;AAQE,MAAA,QAAQ,EAAEI,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACL,QAAAA,SAAS,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd,CARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAiBD;;AApCmC;;AAyCtC,eAAeZ,SAAf","sourcesContent":["import React from 'react';\nimport './QuoteForm.css';\n\nclass QuoteForm extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {character: '' }; \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event){\n        this.setState({character: event.target.value})\n    }\n\n    handleSubmit(event){\n        console.log(`Here come a new character: ${this.state.value}`)\n        event.preventDefault();\n    }\n\n    render() {\n      return (\n        <form className=\"QuoteForm\" onSubmit={this.handleSubmit}>\n\n          <label htmlFor=\"character\">Character:</label>\n\n          <input id=\"character\" name=\"character\" type=\"text\" value={this.state.character}\n            /* onChange={(event) => {\n              const input = event.target;\n              console.log('NAME:', input.name, 'VALUE:', input.value);\n            }} */\n\n            // onChange={this.handleChange}\n\n            onChange={event => this.setState({character: event.target.value})}/>\n\n        </form>\n      );\n    }\n  }\n  \n\n\n  export default QuoteForm;"]},"metadata":{},"sourceType":"module"}