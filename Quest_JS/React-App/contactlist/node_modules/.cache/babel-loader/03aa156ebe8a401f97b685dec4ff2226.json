{"ast":null,"code":"var _jsxFileName = \"/home/rach/Documents/WILD CODE SCHOOL/WCS_quest_2020/Quest_JS/React-App/contactlist/src/components/Contact.js\";\nimport React, { Component } from 'react';\nimport \"./Contact.css\"; //import { ReactComponent } from '*.svg';\n\nclass Contact extends React.Component {\n  // convertir en Class\n  // creer un contructor et initialiser un state {onlin : false}\n  // au  clic sur le status modifie le state du online \n  // et change le css + le texte selon un rendu conditionnel\n  constructor(props) {\n    super(props);\n\n    this.isOnline = event => this.state ? this.setState({\n      online: false\n    }) : this.setState({\n      online: true\n    });\n\n    this.users = [{\n      name: 'Robert Reyes',\n      avatar: 'https://randomuser.me/api/portraits/men/28.jpg',\n      online: false\n    }, {\n      name: 'Nellie Caldwell',\n      avatar: 'https://randomuser.me/api/portraits/women/17.jpg',\n      online: true\n    }, {\n      name: 'Vernon Mason',\n      avatar: 'https://randomuser.me/api/portraits/men/84.jpg',\n      online: true\n    }, {\n      name: 'Erica Hunt',\n      avatar: 'https://randomuser.me/api/portraits/women/87.jpg',\n      online: false\n    }, {\n      name: 'Juanita Phillips',\n      avatar: 'https://randomuser.me/api/portraits/women/55.jpg',\n      online: true\n    }];\n    this.state = this.users.online;\n  } // isOnline = () => this.users.map( event => console.log(\"test\") );\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, this.users.map(index => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 42\n      }\n    }, index.name))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.users.map(index => /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avatar\",\n      src: index.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 40\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, this.users.map(index => index.online ? /*#__PURE__*/React.createElement(\"li\", {\n      className: \"status-online\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 55\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 85\n      }\n    }, \"online\")) : /*#__PURE__*/React.createElement(\"li\", {\n      className: \"status-offline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 106\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 137\n      }\n    }, \"offline\"))))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/rach/Documents/WILD CODE SCHOOL/WCS_quest_2020/Quest_JS/React-App/contactlist/src/components/Contact.js"],"names":["React","Component","Contact","constructor","props","isOnline","event","state","setState","online","users","name","avatar","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP,C,CACA;;AAIA,MAAMC,OAAN,SAAsBF,KAAK,CAACC,SAA5B,CAAqC;AAAE;AACnB;AACA;AACA;AAClBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAkClBC,QAlCkB,GAkCPC,KAAK,IAAI,KAAKC,KAAL,GAAa,KAAKC,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAd,CAAb,GAA8C,KAAKD,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAd,CAlChD;;AAEhB,SAAKC,KAAL,GAAa,CACT;AACEC,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,MAAM,EAAE,gDAFV;AAGEH,MAAAA,MAAM,EAAE;AAHV,KADS,EAMT;AACEE,MAAAA,IAAI,EAAE,iBADR;AAEEC,MAAAA,MAAM,EAAE,kDAFV;AAGEH,MAAAA,MAAM,EAAE;AAHV,KANS,EAWT;AACEE,MAAAA,IAAI,EAAE,cADR;AAEEC,MAAAA,MAAM,EAAE,gDAFV;AAGEH,MAAAA,MAAM,EAAE;AAHV,KAXS,EAgBT;AACEE,MAAAA,IAAI,EAAE,YADR;AAEEC,MAAAA,MAAM,EAAE,kDAFV;AAGEH,MAAAA,MAAM,EAAE;AAHV,KAhBS,EAqBT;AACEE,MAAAA,IAAI,EAAE,kBADR;AAEEC,MAAAA,MAAM,EAAE,kDAFV;AAGEH,MAAAA,MAAM,EAAE;AAHV,KArBS,CAAb;AA2BE,SAAKF,KAAL,GAAa,KAAKG,KAAL,CAAWD,MAAxB;AACH,GAlCkC,CAqCnC;;;AAEAI,EAAAA,MAAM,GAAE;AAEN,wBACA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEM;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWI,GAAX,CAAiBC,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBA,KAAK,CAACJ,IAA5B,CAA1B,CADH,CADF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWI,GAAX,CAAeC,KAAK,iBAAI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,GAAG,EAAEA,KAAK,CAACH,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CADH,CAbF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWI,GAAX,CAAeC,KAAK,IAAIA,KAAK,CAACN,MAAN,gBAAe;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9B,CAAf,gBAAkE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA/B,CAA1F,CADH,CAjBF,CAFN,CADA;AAyBD;;AAlEkC;;AAqErC,eAAeP,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport \"./Contact.css\"\n//import { ReactComponent } from '*.svg';\n\n\n\nclass Contact extends React.Component{ // convertir en Class\n                    // creer un contructor et initialiser un state {onlin : false}\n                    // au  clic sur le status modifie le state du online \n                    // et change le css + le texte selon un rendu conditionnel\n  constructor(props){\n    super(props)\n    this.users = [\n        {\n          name: 'Robert Reyes',\n          avatar: 'https://randomuser.me/api/portraits/men/28.jpg',\n          online: false\n        },\n        {\n          name: 'Nellie Caldwell',\n          avatar: 'https://randomuser.me/api/portraits/women/17.jpg',\n          online: true\n        },\n        {\n          name: 'Vernon Mason',\n          avatar: 'https://randomuser.me/api/portraits/men/84.jpg',\n          online: true\n        },\n        {\n          name: 'Erica Hunt',\n          avatar: 'https://randomuser.me/api/portraits/women/87.jpg',\n          online: false\n        },\n        {\n          name: 'Juanita Phillips',\n          avatar: 'https://randomuser.me/api/portraits/women/55.jpg',\n          online: true\n        }\n      ];\n      this.state = this.users.online\n  }\n\n\n  // isOnline = () => this.users.map( event => console.log(\"test\") );\n  isOnline = event => this.state ? this.setState({online: false}) : this.setState({online: true});\n  render(){\n\n    return (\n    <div className=\"Contact\">\n\n          <div className=\"status\">\n            <div className=\"status-text\">\n              {this.users.map ( index => <li className=\"name\">{index.name}</li>)}\n            </div>\n            \n            {/*  <div> {this.users.map (index => this.online ?\n              \n              <ul><li><img className=\"avatar\" src={index.avatar}/></li><li className=\"status-online\"  onClick={this.isOnline}></li><p>online</p></ul>\n              :\n              <ul><li><img className=\"avatar\" src={index.avatar}/></li><li className=\"status-offline\"  onClick={this.isOnline}></li><p>offline</p></ul>)}\n              </div>\n            </div> */}\n\n            <div>\n              {this.users.map(index => <img className=\"avatar\" src={index.avatar} />)}\n            </div>\n          \n            <div> \n              {this.users.map(index => index.online ? <li className=\"status-online\"><p>online</p></li> : <li className=\"status-offline\"><p>offline</p></li>)}\n            </div>\n          </div>\n    </div>)\n  }\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}