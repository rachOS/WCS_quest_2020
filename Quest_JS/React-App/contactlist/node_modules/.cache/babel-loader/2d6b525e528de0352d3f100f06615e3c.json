{"ast":null,"code":"var _jsxFileName = \"/home/rach/Documents/WILD CODE SCHOOL/WCS_quest_2020/Quest_JS/React-App/contactlist/src/components/Contact.js\";\nimport React, { Component } from 'react';\nimport \"./Contact.css\"; //import { ReactComponent } from '*.svg';\n\nclass Contact extends React.Component {\n  // convertir en Class\n  // creer un contructor et initialiser un state {onlin : false}\n  // au  clic sur le status modifie le state du online \n  // et change le css + le texte selon un rendu conditionnel\n  constructor(props) {\n    super(props);\n\n    this.isOnline = event => this.state ? this.setState({\n      online: false\n    }) : this.setState({\n      online: true\n    });\n\n    this.state = {\n      online: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, \"1234\");\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/rach/Documents/WILD CODE SCHOOL/WCS_quest_2020/Quest_JS/React-App/contactlist/src/components/Contact.js"],"names":["React","Component","Contact","constructor","props","isOnline","event","state","setState","online","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP,C,CACA;;AAIA,MAAMC,OAAN,SAAsBF,KAAK,CAACC,SAA5B,CAAqC;AAAE;AACnB;AACA;AACA;AAClBE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAKlBC,QALkB,GAKPC,KAAK,IAAI,KAAKC,KAAL,GAAa,KAAKC,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAd,CAAb,GAA8C,KAAKD,QAAL,CAAc;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAd,CALhD;;AAEhB,SAAKF,KAAL,GAAa;AAACE,MAAAA,MAAM,EAAE;AAAT,KAAb;AACD;;AAIDC,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA8BD;;AA3CkC;;AA8CrC,eAAeR,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport \"./Contact.css\"\n//import { ReactComponent } from '*.svg';\n\n\n\nclass Contact extends React.Component{ // convertir en Class\n                    // creer un contructor et initialiser un state {onlin : false}\n                    // au  clic sur le status modifie le state du online \n                    // et change le css + le texte selon un rendu conditionnel\n  constructor(props){\n    super(props)\n    this.state = {online: true}\n  }\n\n  isOnline = event => this.state ? this.setState({online: false}) : this.setState({online: true});\n\n  render(){\n\n    return (\n      <div className=\"Contact\">\n\n            {/* <div className=\"status\">\n              <div className=\"status-text\">\n\n                {this.props.map ( index => \n                  <ul >\n\n                    <li className=\"name\">\n                      {index.name}\n                    </li>\n\n                    <img className=\"avatar\" src={index.avatar} />\n\n                    <li className={ index.online ? \"status-online\" : \"status-offline\"}>\n                    </li>\n\n                    <p>\n                      {index.online ? \"online\" : \"offline\"}\n                      <button onClick={this.isOnline}>Change status</button>\n                    </p>\n\n                  </ul>)\n                }\n                \n              </div>\n            </div> */}\n            1234\n      </div>)\n  }\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}